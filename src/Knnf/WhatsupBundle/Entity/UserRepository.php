<?php

namespace Knnf\WhatsupBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
	public function save(array $data){
		$em = $this->getEntityManager();

		$user = new User();

		if($data['id']){
			$user->setId($data['id']);
			$user->setDateupdate(date());
		} 
		if($data['firstname']) $user->setFirstname($data['firstname']);
		if($data['lastname']) $user->setLastname($data['lastname']);
		if($data['username']) $user->setUsername($data['username']);
		if($data['email']) $user->setEmail($data['email']);
		if($data['password']) $user->setPassword($data['password']);
		if($data['website']) $user->setWebsite($data['website']);
		if($data['birthday']) $user->setBirthday($data['birthday']);
		if($data['photo']) $user->setPhoto($data['photo']);
		if($data['country']) $user->setCountry($data['country']);
		if($data['city']) $user->setCity($data['city']);
		if($data['activate']) $user->setActivate($data['activate']);
		if($data['key']) $user->setKey($data['key']);
		


		$em->persist($user);
        $em->flush();
	}

	public function delete($id){
		if(!$id) die('Missing parameter');

		$em = $this->getEntityManager();
        $article = $em->getRepository('KnnfWhatsupBundle:User')->find($id);
        $em->remove($article);
        $em->flush();
	}

	 public function test(){
	    $qb = $this->_em->createQueryBuilder();
	    $qb->select('count(article.id)');
	    $qb->from('KnnfWhatsupBundle:Article','article');

	    return $count = $qb->getQuery()->getSingleScalarResult();
	}

    public function getDailySubscription()
    {
    	$now = date('Y-m-d 00:00:00');
    	$now2 = date('Y-m-d 23:59:59');
    	$q = $this->_em->createQueryBuilder()
	            ->select('count(User.id) as nombre')
	            ->from('KnnfWhatsupBundle:User','User')
	            ->Where('User.dateinsert > (:dateinsert)')
	            ->andWhere('User.dateinsert < (:dateinsert2)')
	            ->setParameter('dateinsert', $now)
	            ->setParameter('dateinsert2', $now2);
	            
	     return $q->getQuery()->getResult();
    }

	public function getTotalSubscription()
    {
    	$q = $this->_em->createQueryBuilder()
	            ->select('count(User.id) as nombre')
	            ->from('KnnfWhatsupBundle:User','User');
	            
	     return $q->getQuery()->getResult();
    }

}
